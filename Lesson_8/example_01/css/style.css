body {
    padding: 0;
    margin: 0;
}

header {
    background-color: lightblue;
    height: 70px;

}

footer {
    background-color: lightgray;
    height: 100px;


}

main {
    min-height: 100vh;

    /*
    vh - viewport height - это высота окна браузера
    vw - viewport width - это ширина окна браузера
    100vh - это 100% высоты окна браузера
    100vw - это 100% ширины окна браузера
    */


}

.card {
    height: 450px;
    width: 300px;
    margin: 24px;
    position: static;
    /* static - это значение по умолчанию, которое не позволяет элементу позиционироваться относительно других элементов*/
    /* relative - позволяет элементу позиционироваться относительно своего нормального положения в потоке документа  , мы можем управлять положением элемента на стронице при помощи top, right, bottom, left и он будет расположени относительно своего нормального положения (если бы он был статическим) а другие элементы ведут себя, как если бы он оставался на своем месте*/
    /* absolute - позволяет элементу позиционироваться относительно ближайшего позиционированного предка */
    /* fixed - позволяет элементу позиционироваться относительно окна браузера */
}

.relative {
    position: relative;
    top: 40px;
    left: 40px;

}

.red {
    background-color: red;
}

.orange {
    background-color: orange;
}

.blue {
    background-color: blue;
}

.green {
    background-color: green;
}

.offset {
    position: relative;
    top: -30px;
    left: 30px;
}

.parent {
    position: relative;
}

.child {
    background-color: yellow;
    width: 50px;
    height: 50px;
    position: absolute;
    bottom: 20px;
    right: 20px;
}
.up{
    background-color: lightgreen;
    width: 40px;
    height: 40px;
    border-radius:8px;
    margin: auto;
    position: fixed;
    bottom: 30px;
    right: 30px;
}
.sticky{
    position: sticky;
    top: 46px;
    z-index: 3;
    /* z-index - это свойство CSS, которое определяет порядок наложения элементов на странице. Чем больше значение z-index, тем выше элемент будет находиться над другими элементами. Если элементы имеют одинаковое значение z-index, то порядок наложения будет определяться порядком их появления в HTML-документе */
}
.nav-bar {
    position: sticky;
    top: 0;
    height: 40px;
    background-color: lightpink;
    z-index: 9;
}
/* position: sticky - позволяет элементу оставаться на месте при прокрутке страницы, пока он не достигнет определенной позиции, после чего он будет вести себя как обычный элемент в потоке документа 
sticky позиционируется относительно своего нормального положения в потоке документа, но при этом он будет оставаться на месте при прокрутке страницы, пока не достигнет определенной позиции, после чего он будет вести себя как обычный элемент в потоке документа*/   

/* fixed - позволяет элементу позиционироваться относительно окна браузера, то есть он будет оставаться на одном и том же месте при прокрутке страницы, если мы укажем top: 0; right: 0; то он будет в правом верхнем углу, если мы укажем bottom: 0; left: 0; то он будет в левом нижнем углу */

/* если хочешь указать позицию в верхний левый угол, то нужно указать top: 0; left: 0;  а если в нижный правый угол, то нужно указать bottom: 0; right: 0; */
/*
элемент с position: absolute будет позиционироваться относительно ближайшего предка с position: relative
если такого предка нет, то он будет позиционироваться относительно окна браузера 
Если есть несколько предков с position: relative, то он будет позиционироваться относительно ближайшего из них
если, если позиция не равная relative, то он будет позиционироваться относительно окна браузера
авсолютно позиционированный элемент изчезает из потока документа, то есть другие элементы не будут учитывать его при своем позиционировании
*/